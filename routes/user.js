// Generated by CoffeeScript 1.7.1
(function() {
  var UserRepository, createUser, findAllUser, findByPagedUser, findUser, modifyUser;

  UserRepository = require('../domain/domain.repository/userRepo');

  createUser = function(req, res) {
    var model, serviceReq, userRepo;
    serviceReq = {
      id: req.query.id,
      name: req.query.name,
      sex: req.query.sex
    };
    model = req.models.user;
    userRepo = new UserRepository(model);
    return userRepo.add([serviceReq], function(err, result) {
      var serviceRes;
      if (err) {
        res.send(err);
      }
      serviceRes = result;
      return res.send(JSON.stringify(serviceRes));
    });
  };

  findUser = function(req, res) {
    var model, serviceReq, userRepo;
    serviceReq = {
      id: req.query.id
    };
    model = req.models.user;
    userRepo = new UserRepository(model);
    return userRepo.findFirstOrDefault([serviceReq], null, function(err, result) {
      var serviceRes;
      if (err) {
        res.send(err);
      }
      serviceRes = result;
      return res.send(JSON.stringify(serviceRes));
    });
  };

  findAllUser = function(req, res) {
    var model, serviceReq, userRepo;
    serviceReq = {
      sex: req.query.sex
    };
    model = req.models.user;
    userRepo = new UserRepository(model);
    return userRepo.findAll([serviceReq], null, null, function(err, result) {
      var serviceRes;
      if (err) {
        res.send(err);
      }
      serviceRes = result;
      return res.send(JSON.stringify(serviceRes));
    });
  };

  findByPagedUser = function(req, res) {
    var model, pageNo, pageSize, serviceReq, userRepo;
    serviceReq = {
      sex: req.query.sex
    };
    pageNo = req.query.pageNo;
    pageSize = req.query.pageSize;
    model = req.models.user;
    userRepo = new UserRepository(model);
    return userRepo.findByPaged(serviceReq, null, pageNo, pageSize, function(err, result) {
      var serviceRes;
      if (err) {
        res.send(err);
      }
      serviceRes = result;
      return res.send(JSON.stringify(serviceRes));
    });
  };

  modifyUser = function(req, res) {
    var model, serviceReq, userRepo;
    serviceReq = {
      id: req.query.id,
      name: req.query.name,
      sex: req.query.sex
    };
    model = req.models.user;
    userRepo = new UserRepository(model);
    return userRepo.update(serviceReq.id, serviceReq, function(err, result) {
      var serviceRes;
      if (err) {
        res.send(err);
      }
      serviceRes = result;
      return res.send(JSON.stringify(serviceRes));
    });
  };

  exports.create = createUser;

  exports.find = findUser;

  exports.findAll = findAllUser;

  exports.findByPaged = findByPagedUser;

  exports.modify = modifyUser;

}).call(this);

//# sourceMappingURL=user.map
